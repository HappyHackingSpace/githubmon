import type { Metadata } from "next";
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import { ThemeProvider } from '@/components/theme/ThemeProvider'
import { AuthProvider } from '@/components/providers/AuthProvider'
import { OAuthSessionSync } from '@/components/providers/OAuthSessionSync'

import { HydrationBoundary } from "@/components/providers/HydrationBoundary";
import { NotificationProvider } from "@/components/common/NotificationProvider";
import { DataInitializer } from "@/components/providers/DataInitializer";


const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",

};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
      >
        <AuthProvider>
          <ThemeProvider defaultTheme="system" storageKey="githubmon-theme">
            <HydrationBoundary>
              <OAuthSessionSync />
              <DataInitializer />
              {children}
              <NotificationProvider />
            </HydrationBoundary>
          </ThemeProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
